package fragments;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import guay.philippe.capstone.AuthenticateTask;
import guay.philippe.capstone.GetNewQuizTask;
import guay.philippe.capstone.HomePageActivity;
import guay.philippe.capstone.IApiAccessResponse;
import guay.philippe.capstone.LoginActivity;
import guay.philippe.capstone.ProgressDialog;
import guay.philippe.capstone.Quiz;
import guay.philippe.capstone.R;
import android.app.Activity;
import android.app.ListFragment;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;

public class NewQuizFragment extends ListFragment {
	private ListView mListView;
	public static final String ARG_SECTION_NUMBER = "section_number";
   @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
            Bundle savedInstanceState) {
 
        View rootView = inflater.inflate(R.layout.fragment_new_quiz, container, false);
        Bundle args = getArguments();
        String jsonStr = args.getString("ARGS");
        JSONArray json_arr = null;
		try {
			json_arr = new JSONArray(jsonStr);
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
        ArrayList<JSONObject> array_list = new ArrayList<JSONObject>();      
        if (json_arr != null) { 
           int len = json_arr.length();
           for (int i=0;i<len;i++){ 
            try {
				array_list.add((JSONObject) json_arr.get(i));
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
           } 
        } 
//        GetNewQuizTask authObj = new GetNewQuizTask();
//    	authObj.delegate = this;
//		authObj.execute();
        
        mListView = (ListView) getActivity().findViewById(R.id.new_quiz_list);
		 QuizAdapter arrayAdapter = new QuizAdapter(
                getActivity(),
                R.layout.newquiz_item,
                array_list);
//		 mListView.setAdapter(arrayAdapter);
		 
		 setListAdapter(arrayAdapter);
		
        return rootView;
    }
   
	
	private class QuizAdapter extends ArrayAdapter<JSONObject>{
	  public View v;
		  
	  public QuizAdapter(Context context){  
        super(context, R.layout.newquiz_item);
	  }
	  
	  
	  public QuizAdapter(Activity activity, int newquizItem,
			ArrayList<JSONObject> array_list) {
		  super(activity, newquizItem, array_list);
	  }

	  @Override 
		 public View getView(int position, View convertView, ViewGroup parent ) {
			 if (convertView == null) {
			        LayoutInflater vi = (LayoutInflater) getActivity().getApplicationContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			        convertView = vi.inflate(R.layout.newquiz_item, null);
		    }
			
			 TextView tv = (TextView) convertView.findViewById(R.id.text1);
			 TextView tv2 = (TextView) convertView.findViewById(R.id.text2);
			 tv.setText("Test");
			 tv2.setText("Test2");
			 
			return convertView;
			 
		 }
	}
	
	private class GetNewQuizTask extends AsyncTask<String, Void, List<Quiz>> {
		@Override
		protected List<Quiz> doInBackground(String... params) {
			// TODO Auto-generated method stub
			List<Quiz> result = new ArrayList<Quiz>();
			try {
				URL u = new URL("http://10.0.2.2:8080/quiz");
				HttpURLConnection conn = (HttpURLConnection) u.openConnection();
	            conn.setRequestMethod("GET");
	            conn.connect();
                InputStream is = conn.getInputStream();
                // Read the stream
                byte[] b = new byte[1024];
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                while ( is.read(b) != -1)
                baos.write(b);
                String JSONResp = new String(baos.toByteArray());
                JSONArray arr = new JSONArray(JSONResp);
                for (int i=0; i < arr.length(); i++) {
                    result.add(convertQuiz(arr.getJSONObject(i)));
                }
            	return result;
            }
            catch(Throwable t) {
            	t.printStackTrace();
            }
            return null;

		}
	}
	 private Quiz convertQuiz(JSONObject obj) throws JSONException {
         String name = obj.getString("name");
         int rating = obj.getInt("rating");
         
         ArrayList<String> movieSet = new ArrayList<String>();
         JSONObject movieObj = obj.getJSONObject("movieSet");
         Iterator iter = movieObj.keys();
         while(iter.hasNext()){
            String key = (String)iter.next();
            movieSet.add(movieObj.getString(key));
         }
         
         String justification = obj.getString("justification");
         int unrelatedMovie = obj.getInt("UnrelatedMovie");

         return new Quiz(name, rating, justification, unrelatedMovie,movieSet);
     }

		
}
	
