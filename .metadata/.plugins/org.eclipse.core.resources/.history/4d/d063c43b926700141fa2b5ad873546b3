package guay.philippe.capstone;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONObject;

import com.example.android.effectivenavigation.MainActivity.DummySectionFragment;

import android.app.FragmentManager;
import android.app.ActionBar;
import android.app.Activity;
import android.app.ActionBar.Tab;
//import android.app.Fragment;
import android.app.FragmentTransaction;
import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import fragments.CompletedQuizFragment;
import fragments.CreatedQuizFragment;
import fragments.NewQuizFragment;

import fragments.NewQuizFragment.QuizAdapter;

public class HomePageActivity extends FragmentActivity implements ActionBar.TabListener, IApiAccessResponse {
	
	private ViewPager mViewPager;
	private Bundle mNewQuizArgs;
    private AppSectionsPagerAdapter mAppSectionsPagerAdapter;
	
    @Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_home_page);
		
		mAppSectionsPagerAdapter = new AppSectionsPagerAdapter(getSupportFragmentManager());
        
		final ActionBar actionBar = getActionBar();
		actionBar.setHomeButtonEnabled(false);
		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);	
		
		mViewPager = (ViewPager) findViewById(R.id.pager);
        mViewPager.setAdapter(mAppSectionsPagerAdapter);
        mViewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener() {
            @Override
            public void onPageSelected(int position) {
                // When swiping between different app sections, select the corresponding tab.
                // We can also use ActionBar.Tab#select() to do this if we have a reference to the
                // Tab.
                actionBar.setSelectedNavigationItem(position);
            }
        });
        
        // For each of the sections in the app, add a tab to the action bar.
        for (int i = 0; i < mAppSectionsPagerAdapter.getCount(); i++) {
            // Create a tab with text corresponding to the page title defined by the adapter.
            // Also specify this Activity object, which implements the TabListener interface, as the
            // listener for when this tab is selected.
            actionBar.addTab(
                    actionBar.newTab()
                            .setText(mAppSectionsPagerAdapter.getPageTitle(i))
                            .setTabListener(this));
        }
        
        GetNewQuizTask authObj = new GetNewQuizTask();
    	authObj.delegate = this;
		authObj.execute();
        
//        setContentView(mViewPager);
		
//		
//		mTabsAdapter = new TabsAdapter(this, mViewPager);
//        mTabsAdapter.addTab(bar.newTab().setText("New Quiz"),
//	                NewQuizFragment.class, null);
//        mTabsAdapter.addTab(bar.newTab().setText("Quiz History"),
//                CompletedQuizFragment.class, null);
//        mTabsAdapter.addTab(bar.newTab().setText("Create Quiz"),
//	                CreatedQuizFragment.class, null);
//        if (savedInstanceState != null) {
//            bar.setSelectedNavigationItem(savedInstanceState.getInt("tab", 0));
//        }
	}
    
    @Override
    public void onTabUnselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {
    }

    @Override
    public void onTabSelected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {
        // When the given tab is selected, switch to the corresponding page in the ViewPager.
        mViewPager.setCurrentItem(tab.getPosition());
    }

    @Override
    public void onTabReselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {
    }
    
    public static class AppSectionsPagerAdapter  extends FragmentPagerAdapter {
//        private final Context mContext;
//        private final ActionBar mActionBar;
//        private final ViewPager mViewPager;
//        private final ArrayList<TabInfo> mTabs = new ArrayList<TabInfo>(); 
    	
        public AppSectionsPagerAdapter(android.support.v4.app.FragmentManager fm) {
            super(fm);
        }
        
        @Override
        public Fragment getItem(int i) {
            switch (i) {
                case 0:
                    // The first section of the app is the most interesting -- it offers
                    // a launchpad into the other demonstrations in this example application.
                	Fragment fragmentNew = new Fragment(){
                		public static final String ARG_SECTION_NUMBER = "section_number";
                 	   @Override
                 	    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                 	            Bundle savedInstanceState) {
                 		   	Bundle args = getArguments();
                 	        View rootView = inflater.inflate(R.layout.fragment_new_quiz, container, false);
                 	         
                 	        return rootView;
                 	    }
                	};
                    Bundle argsNew = new Bundle();
                    argsNew.putInt(NewQuizFragment.ARG_SECTION_NUMBER, i + 1);
                    fragmentNew.setArguments(argsNew);
                    return fragmentNew;
                    
                case 1:
                	Fragment fragmentComp = new Fragment(){
                		public static final String ARG_SECTION_NUMBER = "section_number";
                 	   @Override
                 	    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                 	            Bundle savedInstanceState) {
                 	 
                 	        View rootView = inflater.inflate(R.layout.fragment_completed_quiz, container, false);
                 	         
                 	        return rootView;
                 	    }
                	};
                	
                    Bundle argsComp = new Bundle();
                    argsComp.putInt(CompletedQuizFragment.ARG_SECTION_NUMBER, i + 1);
                    fragmentComp.setArguments(argsComp);
                    return fragmentComp;
                case 2:
                	Fragment fragmentCreate = new Fragment(){
                		public static final String ARG_SECTION_NUMBER = "section_number";
                 	   @Override
                 	    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                 	            Bundle savedInstanceState) {
                 	 
                 	        View rootView = inflater.inflate(R.layout.fragment_created_quiz, container, false);
                 	         
                 	        return rootView;
                 	    }
                	};
                	Bundle argsCreate = new Bundle();
                	argsCreate.putInt(CreatedQuizFragment.ARG_SECTION_NUMBER, i + 1);
                    fragmentCreate.setArguments(argsCreate);
                    return fragmentCreate;
                default:
                    // The other sections of the app are dummy placeholders.
                	Fragment fragmentComplete = new Fragment(){
                		public static final String ARG_SECTION_NUMBER = "section_number";
                 	   @Override
                 	    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                 	            Bundle savedInstanceState) {
                 	 
                 	        View rootView = inflater.inflate(R.layout.fragment_created_quiz, container, false);
                 	         
                 	        return rootView;
                 	    }
                	};
                    Bundle argsComplete = new Bundle();
                    argsComplete.putInt(CompletedQuizFragment.ARG_SECTION_NUMBER, i + 1);
                    fragmentComplete.setArguments(argsComplete);
                    return fragmentComplete;
            }
        }

        @Override
        public int getCount() {
            return 3;
        }

        @Override
        public CharSequence getPageTitle(int position) {
            return "Section " + (position + 1);
        }
        
        
//    	static final class TabInfo {
//             private final Class<?> clss;
//             private final Bundle args;
//
//             TabInfo(Class<?> _class, Bundle _args) {
//                 clss = _class;
//                 args = _args;
//             }
//        }
//    	
//        public TabsAdapter(FragmentActivity activity, ViewPager pager) {
//        	super(activity.getSupportFragmentManager());
//            mContext = activity;
//            mActionBar = activity.getActionBar();
//            mViewPager = pager;
//            mViewPager.setAdapter(this);
//            mViewPager.setOnPageChangeListener(this);
//        }
//        
//        public void addTab(ActionBar.Tab tab, Class clss, Bundle args) {
//            TabInfo info = new TabInfo(clss, args);
//            tab.setTag(info);
//            tab.setTabListener(this);
//            mTabs.add(info);
//            mActionBar.addTab(tab);
//            notifyDataSetChanged();
//        }
//        
//     
//        @Override
//        public Fragment getItem(int position) {
//            TabInfo info = (TabInfo) mTabs.get(position);
//            return Fragment.instantiate(mContext, info.clss.getName(), info.args);
//        }
//     
//        @Override
//        public int getCount() {
//            // get item count - equal to number of tabs
//            return mTabs.size();
//        }
//        @Override
//        public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
//        }
//
//        @Override
//        public void onPageSelected(int position) {
//            mActionBar.setSelectedNavigationItem(position);
//        }
//
//        @Override
//        public void onPageScrollStateChanged(int state) {
//        }
//
//        @Override
//        public void onTabSelected(Tab tab, FragmentTransaction ft) {
//            Object tag = tab.getTag();
//            for (int i=0; i<mTabs.size(); i++) {
//                if (mTabs.get(i) == tag) {
//                    mViewPager.setCurrentItem(i);
//                }
//            }
//        }
//
//        @Override
//        public void onTabUnselected(Tab tab, FragmentTransaction ft) {
//        }
//
//        @Override
//        public void onTabReselected(Tab tab, FragmentTransaction ft) {
//        }
     
    }

    @Override
	public void postResult(JSONObject[] jsonObjects) {
    	List<JSONObject> array_list = new ArrayList<JSONObject>();
		 if(jsonObjects != null) {
			 for(int i=0; i< jsonObjects.length; i++){
				 array_list.add(jsonObjects[i]);
			 }
		 }
		 mNewQuizArgs.putSerializable("ARGS", array_list);
	}

	@Override
	public void postResult(Boolean result) {
		// TODO Auto-generated method stub
		
	}
    
//    @Override
//    protected void onSaveInstanceState(Bundle outState) {
//        super.onSaveInstanceState(outState);
//        outState.putInt("tab", getActionBar().getSelectedNavigationIndex());
//    }
}



